version: '3'
services:
  eureka-server:
    container_name: eureka-server
    build:
      context: ./discoveryserver
      dockerfile: Dockerfile
    networks:
      - gestion_rh_network
    ports:
      - "8761:8761"
    environment:
      SPRING_APPLICATION_NAME: discovery-server-service
      SERVER_PORT: 8761
      EUREKA_CLIENT_REGISTER-WITH-EUREKA: "true"
      EUREKA_CLIENT_FETCH-REGISTRY: "true"
      EUREKA_CLIENT_HEALTHCHECK_ENABLED: "true"

  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    networks:
      - gestion_rh_network
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
    environment:
      SPRING_APPLICATION_NAME: api-gateway-service
      SERVER_PORT: 8080


  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: saadkammouss@gmail.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin-employee
    ports:
      - "5050:80"
    networks:
      - gestion_rh_network

#  keycloak_database:
#    image: postgres:13
#    container_name: keycloak_database
#    restart: always
#    environment:
#      POSTGRES_USER: keycloak
#      POSTGRES_PASSWORD: keycloak
#      POSTGRES_DB: keycloak
#    volumes:
#      - ./data/keycloak_db_data:/var/lib/postgresql/data
#    command: [ "postgres", "-c", "shared_preload_libraries=pg_stat_statements", "-c", "log_statement=all" ]
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U keycloak" ]
#      interval: 30s
#      timeout: 30s
#      retries: 3
#    networks:
#      - gestion_rh_network

  keycloak-db:
    container_name: keycloak-db
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_DB: keycloak
    volumes:
      - ./data/keycloak_db_data:/var/lib/postgresql/data
    command: [ "postgres", "-c", "shared_preload_libraries=pg_stat_statements", "-c", "log_statement=all" ]
    networks:
      - gestion_rh_network
    ports:
      - "5432:5432"

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:21.1.1
    restart: always
    hostname: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db/keycloak
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_DATABASE: keycloak
      KC_DB_URL_PORT: 5432
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_PROXY: none
      KC_HOSTNAME:
      KC_HTTP_ENABLED: true
      #KC_HTTP_RELATIVE_PATH: ${KEYCLOAK_HTTP_RELATIVE_PATH}
      #KC_HTTPS_TRUST_STORE_PASSWORD: ${KEYCLOAK_HTTPS_TRUST_STORE_PASSWORD}
    depends_on:
      - keycloak-db
    ports:
      - "8089:8080"
    networks:
      - gestion_rh_network
    command:
      - start-dev --import-realm
    volumes:
      - ./gestionRH-realm.json:/opt/keycloak/data/import/gestionRH-realm.json

networks:
  gestion_rh_network:
    driver: bridge
    external: true




#  keycloak:
#    image: keycloak/keycloak:21.1.1
#    container_name: keycloak
#    environment:
#      KEYCLOAK_USER: admin
#      KEYCLOAK_PASSWORD: admin
#      DB_VENDOR: POSTGRES
#      DB_ADDR: keycloak_database
#      DB_DATABASE: keycloak
#      DB_USER: keycloak
#      DB_PASSWORD: keycloak
#    ports:
#      - "8081:8080"
#    depends_on:
#      - keycloak_database
#    networks:
#      - gestion_rh_network